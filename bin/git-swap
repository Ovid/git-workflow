#!/usr/bin/env bash

# vim: filetype=sh

function show_help() {
    less <<END
$(basename "$0") [-?|-h|--help]

    -h --help   Show this help and exit

Swap being primary branch and last branch you committed to, and vice versa.

This project is on github at https://github.com/Ovid/git-workflow
END
}

stash=0

# Parse arguments
POSITIONAL=()
while [[ $# -gt 0 ]]
do
key="$1"
case $key in
    -?|-h|--help)
    shift # past argument
    show_help;
    exit;
    ;;
    *)    # unknown option
    POSITIONAL+=("$1") # save it in an array for later
    shift # past argument
    ;;
esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters

set -Eeuo pipefail

prog=$(basename $0)
need_to_stash=$(git status --porcelain -uno)

if [[ $need_to_stash ]]; then
    echo You have uncommitted changes. Commit or stash them before rerunning $prog
    exit 1
fi

target=$(basename $( git symbolic-ref refs/remotes/origin/HEAD ) )
if [ -z $target ]; then
    echo Could not determine target branch via '"basename $( git symbolic-ref refs/remotes/origin/HEAD )"'
    exit 1
fi

branch=$(git rev-parse --abbrev-ref HEAD)
need_to_stash=$(git status --porcelain -uno)

if [ "$branch" == "$target" ]; then
    git checkout $(git for-each-ref --sort=-committerdate --count 2 refs/heads/  --format "%(refname:short)"|grep -v $target)
else
    git checkout $target
fi
